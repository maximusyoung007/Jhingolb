<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maximus.jhingolbback.dao.CommentsMapper">
  <resultMap id="BaseResultMap" type="com.maximus.jhingolbback.model.Comments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="father_id" jdbcType="VARCHAR" property="fatherId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
    <result column="content" property="content" jdbcType="VARCHAR"/>
    <result column="likes" property="likes" jdbcType="INTEGER"/>
    <result column="dislikes" property="dislikes" jdbcType="INTEGER"/>
    <result column="replay_to" property="replayTo" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.maximus.jhingolbback.model.Comments">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_id, username, email, article_id, add_time, update_time,avatar,content,likes,dislikes,replay_to
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.maximus.jhingolbback.model.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.maximus.jhingolbback.model.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.maximus.jhingolbback.model.CommentsExample">
    delete from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maximus.jhingolbback.model.Comments">
    insert into comments (id, father_id, username, 
      email, article_id, add_time, 
      update_time, content,likes,dislikes,replay_to)
    values (uuid(), #{fatherId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR}, now(),
      now(), #{content,jdbcType=LONGVARCHAR},0,0,#{replayTo})
    <selectKey keyProperty="commentCounts" resultType="java.lang.Integer" order="AFTER">
      SELECT COUNT(*) from comments WHERE article_id = #{articleId}
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.maximus.jhingolbback.model.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fatherId != null">
        father_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fatherId != null">
        #{fatherId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maximus.jhingolbback.model.CommentsExample" resultType="java.lang.Long">
    select count(*) from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKey" parameterType="com.maximus.jhingolbback.model.Comments">
    update comments
    <set>
     <if test="fatherId != null">
        father_id = #{fatherId,jdbcType=VARCHAR},
     </if>
     <if test="username != null">
      username = #{username,jdbcType=VARCHAR},
     </if>
     <if test="email != null">
      email = #{email,jdbcType=VARCHAR},
     </if>
     <if test="articleId != null">
      article_id = #{articleId,jdbcType=VARCHAR},
     </if>
     <if test="addTime != null">
      add_time = #{addTime,jdbcType=TIMESTAMP},
     </if>
     <if test="updateTime != null">
      update_time = #{updateTime,jdbcType=TIMESTAMP},
     </if>
     <if test="likes != null">
       likes = #{likes},
     </if>
     <if test="dislikes != null">
       dislikes = #{dislikes}
     </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>